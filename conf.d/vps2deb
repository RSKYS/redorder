#!/bin/sh

# Copyright 2025, Pouria Rezaei <Pouria.rz@outlook.com>

# Part of RedOrder, handling Debian
# (Most-likely due me hating Ubuntu)

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.

set -e

mirror="https://mirror.rackspace.com"
version="bookworm"

extract_and_prepare() {
	rm -rf /tmp/build /Debian
	mkdir -p /tmp/build /Debian
	# Extract base from Docker
	cat > /tmp/build/Dockerfile <<-INIT
	FROM debian:$version AS builder
	USER root

	RUN apt update && apt -y install debootstrap
	RUN mkdir -p /mnt && \
		debootstrap --arch amd64 \
		--include=sudo,bash,dbus,locales,vim,wget,ca-certificates,curl,systemd-timesyncd,zstd,parted,cron,dosfstools,git,openssh-server,build-essential,python3-venv,python3-pip,grub-efi-amd64,open-vm-tools \
		$version /mnt $mirror/debian

	FROM scratch
	COPY --from=builder /mnt /

	CMD ["/bin/bash"]
	INIT

	( cd /tmp/build
	  DOCKER_BUILDKIT=1 \
		docker build -t base_sys . )

	docker create --name deb_tmp base_sys
	docker export deb_tmp -o /tmp/base.tar
	docker rm -f deb_tmp
	docker rmi base_sys
	tar -xpf /tmp/base.tar -C /Debian
	rm -f /tmp/base.tar

	if [ -f /etc/resolv.conf ]; then
		cp -L /etc/resolv.conf /Debian/etc/resolv.conf
	else
		(umask 022; printf '%s\n' "nameserver 1.1.1.1") > /Debian/etc/resolv.conf
	fi

	sgdisk --backup=/tmp/partitions.map \
		"/dev/$(lsblk -no pkname "$(findmnt -no SOURCE /)")"
}

backup_old_files() {
	cp -f /etc/fstab /Debian/etc/fstab
	cp -f /etc/default/grub /Debian/etc/default/grub
	cp -fL /etc/hostname /etc/localtime /Debian/etc/ 2>/dev/null || true
}

un_mount() {
	for mn in $(awk '$2 != "/" &&
		$2 !~ /^\/(boot|efi|dev|sys|Debian|proc|var\/lib\/docker|var\/lib\/containerd)/ {print $2}' \
		/proc/mounts | sort -r); do
		umount -l "$mn" 2>/dev/null || true
	done
	unset mn
}

cleanup() {
	rm -rf /Debian
	export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/usr/games"
}

overwrite_system() {
	rm -rf /boot/efi/* 2>/dev/null || true
	rm -f /boot/* 2>/dev/null || true

	un_mount
	# sync Debian tree into root
	rsync -aHAX --numeric-ids --delete-after \
		--exclude=/dev/** --exclude=/proc/** --exclude=/sys/** --exclude=/tmp/** \
		--exclude=/Debian/** --exclude=/efi/** --exclude=/boot/** \
		/Debian/ /

	cleanup

	cat > /etc/apt/sources.list <<-MGM
	deb $mirror/debian/ $version contrib main non-free non-free-firmware

	deb $mirror/debian/ ${version}-updates contrib main non-free non-free-firmware

	deb $mirror/debian/ ${version}-proposed-updates contrib main non-free non-free-firmware

	deb $mirror/debian/ ${version}-backports contrib main non-free non-free-firmware

	deb $mirror/debian-security/ ${version}-security contrib main non-free non-free-firmware

	MGM
	unset mirror version

	# For locale
	cat > /etc/locale.gen <<-LCL
	en_GB.UTF-8 UTF-8
	en_US.UTF-8 UTF-8

	LCL

	update-ca-certificates

	DEBIAN_FRONTEND=noninteractive \
		apt update

	DEBIAN_FRONTEND=noninteractive \
			apt install -y --no-install-recommends --no-install-suggests \
		adwaita-icon-theme appstream apt-file at-spi2-core bash bash-completion bc \
		bcache-tools bolt btrfs-progs build-essential byobu ca-certificates \
		command-not-found console-setup cron cryptsetup cryptsetup-initramfs curl \
		dbus dbus-user-session dconf-gsettings-backend distro-info dosfstools \
		e2fsprogs-l10n eatmydata ed efibootmgr eject ethtool exfatprogs neofetch \
		file fonts-dejavu-core ftp fwupd gdisk gir1.2-packagekitglib-1.0 git \
		gnome-keyring gnome-keyring-pkcs11 gnupg-l10n gpg-wks-client gpg-wks-server \
		grub-efi-amd64 gtk-update-icon-cache hdparm hicolor-icon-theme htop \
		inetutils-telnet info iptables iputils-tracepath irqbalance jq krb5-locales \
		libaio-dev libarchive13 libatasmart4 libatk-bridge2.0-0 libatk1.0-0 libatm1 \
		libatspi2.0-0 libavahi-client3 libavahi-common-data libblockdev-plugins-all \
		libcolord2 libcups2 libduktape207 libdw1 libepoxy0 libevent-2.1-7 \
		libevent-core-2.1-7 libfile-find-rule-perl libflashrom1 libfstrm0 \
		libgcab-1.0-0 libgcr-ui-3-1 libgdk-pixbuf2.0-bin libglib2.0-bin \
		libgnutls-dane0 libgpg-error-l10n libgstreamer1.0-0 libgtk-3-0 libgtk-3-bin \
		libgtk-3-common libgusb2 libidn12 libintl-xs-perl libisns0 libjaylink0 \
		libjemalloc2 libjim-dev libjpeg62-turbo libldap-common liblockfile1 \
		liblognorm5 liblvm2cmd2.03 libmagic-mgc libmagic1 libmbim-utils \
		libmodule-find-perl libmodule-scandeps-perl libnpth0 libntfs-3g89 \
		libopeniscsiusr libpam-cap libpam-gnome-keyring libparted-fs-resize0 \
		libpcap0.8 libpolkit-agent-1-0 libproc-processtable-perl libprotobuf-c1 \
		libqmi-utils librsvg2-2 librsvg2-common libsasl2-modules libsort-naturally-perl \
		libssh-4 libstemmer0d libterm-readkey-perl libtss2-dev libudisks2-0 \
		libunbound8 liburcu8 libuv1 libvolume-key1 libwayland-cursor0 libwayland-egl1 \
		libxcomposite1 libxcursor1 libxdamage1 libxi6 libxinerama1 libxmlb2 \
		libxrandr2 locales lshw lsof lvm2 man-db manpages mdadm modemmanager mokutil \
		mtr-tiny multipath-tools ncurses-term netcat-openbsd netplan.io \
		networkd-dispatcher ntfs-3g open-iscsi openssh-server os-prober overlayroot \
		p11-kit packagekit-tools parted pastebinit pinentry-curses pinentry-gnome3 \
		plymouth pollinate powermgmt-base psmisc publicsuffix python3-automat \
		python3-babel python3-bcrypt python3-cffi-backend python3-charset-normalizer \
		python3-click python3-constantly python3-debian python3-gdbm python3-hamcrest \
		python3-hyperlink python3-incremental python3-jaraco.classes python3-keyring \
		python3-lazr.restfulclient python3-openssl python3-pip python3-rfc3987 \
		python3-rich python3-secretstorage python3-service-identity python3-six \
		python3-systemd python3-twisted python3-uritemplate python3-venv \
		python3-webcolors python3-zipp python3-zope.interface rsync rsyslog \
		sbsigntool screen sg3-utils sosreport squashfs-tools ssh-import-id strace \
		sudo systemd-timesyncd tcpdump telnet thermald thin-provisioning-tools time \
		tpm-udev udisks2 upower usb-modeswitch usb.ids usbutils usrmerge uuid-runtime \
		vim wget wireless-regdb xauth xdg-user-dirs xfsprogs xml-core zerofree zstd

	DEBIAN_FRONTEND=noninteractive \
		dpkg-reconfigure locales
	
	DEBIAN_FRONTEND=noninteractive \
		apt dist-upgrade --auto-remove -y

	DEBIAN_FRONTEND=noninteractive \
		apt install -y linux-image-amd64 linux-headers-amd64
}

configure_network() {
	local dev ipaddr gateway conffile

	dev=$(ls /sys/class/net | grep \
		-Ev '^(lo|docker|veth|br-|virbr|vmnet|zt|wg)' | head -n1)
	ipaddr=$(ip -4 addr show dev "$dev" 2>/dev/null | \
		awk '($1=="inet"){print $2; exit}')
	gateway=$(ip -4 route show default 2>/dev/null | \
		awk '{print $3; exit}')
	conffile="/etc/systemd/network/10-default.network"

	cat > /etc/network/interfaces <<-EOF
	auto lo
	iface lo inet loopback

	auto $dev
	iface $dev inet dhcp
	EOF

	if [ -n "$ipaddr" ]; then
		cat > "$conffile" <<-EOF
		[Match]
		Name=$dev

		[Network]
		Gateway=$gateway
		Address=$ipaddr
		EOF
	else
		cat > "$conffile" <<-EOF
		[Match]
		Name=$dev

		[Network]
		DHCP=yes
		EOF
	fi

	systemctl enable ssh sshd systemd-networkd \
		2>/dev/null || true
}

configure_bootloader() {
	mount -a || true

	root_dev=$(findmnt -no SOURCE / 2>/dev/null)
	needs_lvm2=0

	sgdisk --load-backup=/tmp/partitions.map \
		"/dev/$(lsblk -no pkname "$root_dev")"

	rm -f /tmp/partitions.map
	case $root_dev in
	/dev/mapper/*) needs_lvm2=1 ;;
	esac

	if [ $needs_lvm2 -eq 1 ] && [ -f /etc/lvm/lvm.conf ]; then
		sed -i.bak 's/use_lvmetad = 1/use_lvmetad = 0/g' /etc/lvm/lvm.conf 2>/dev/null
	fi

	if findmnt /efi >/dev/null 2>&1; then
		umount -l /efi
		rm -rf /efi
		mkdir -p /boot/efi
		sed -i 's/\/efi/\/boot\/efi/' /etc/fstab || true
	fi

	grub-install --force --removable --target=x86_64-efi --efi-directory=/boot/efi
	grub-mkconfig -o /boot/grub/grub.cfg 2>/dev/null

	if [ -f /etc/lvm/lvm.conf.bak ]; then
		mv /etc/lvm/lvm.conf.bak /etc/lvm/lvm.conf 2>/dev/null
	fi

	unset root_dev needs_lvm2
}

finalize() {
	if [ -d /etc/ssh/sshd_config.d ]; then
		printf 'PermitRootLogin yes\nPasswordAuthentication yes\n' > /etc/ssh/sshd_config.d/50-Debian.conf
	else
		if grep -q '^#PermitRootLogin' /etc/ssh/sshd_config 2>/dev/null; then
			sed -i '/^#PermitRootLogin\s/s/.*/PermitRootLogin yes/' /etc/ssh/sshd_config 2>/dev/null
		else
			grep -q '^PermitRootLogin' /etc/ssh/sshd_config 2>/dev/null || printf 'PermitRootLogin yes\n' >> /etc/ssh/sshd_config
		fi
	fi

	echo "\nneofetch\n" >> /etc/profile
	echo 'root:0v3rk1ll' | chpasswd

	cat <<-EOF
	Hey there,
	This machine has been squashed with new Debian distro.

	Recommended actions (on the VM host console):
	# sync ; reboot -f

	After reboot you should be able to login as root with '0v3rk1ll'
	Change it later how you see it fit ;-)
	EOF
}

choose_option() {
	case "$1" in
		1|--debian)
			printf 'Installing Debian %s..\n' "$version"
			return 0
			;;
		*)
			return 1
			;;
	esac
}

show_menu() {
	cat <<-EOF
Supported distributions:
1) Debian $version    (--debian)

Usage: $0 [option_number|--option_name]
EOF
}

if [ -n "$1" ]; then
	if ! choose_option "$1"; then
		printf 'Invalid option: %s\n' "$1"
		show_menu
		exit 1
	fi
else
	choose_option 1
fi

cd /
extract_and_prepare
backup_old_files
overwrite_system
configure_network
configure_bootloader
finalize
